Ранее многопроцессорные системы использовались редко и стоили дорого, как
правило, они находились только в больших ЦОД-ах (data centers) или применялись
в научном оборудовании. Сегодня они дёшевы и многочисленны, даже малые
сервера или среднего уровня рабочие станции часто имеют множество
процессоров. Эта тенденция будет только возрастать; так как всё сложнее
становится увеличивать тактовую частоту, производители процессоров будут
вместо этого располагать большее количество ядер на одном чипе. Все ведущие
производители чипов начали этот переход, и мы уже видим машины с очень
большим количеством процессоров.
Поскольку основной единицей планирования является поток, программа только
с одним потоком может запускаться не более чем на одном процессоре за раз. На
двух процессорной системе, однопоточная программа получит доступ к половине
доступных ресурсов ЦПУ; на 100-процессорной системе она откажется от 99%
доступных ресурсов. С другой стороны, программы с множеством активных
потоков могут одновременно выполняться на множестве процессоров. Будучи
должным образом спроектирована, многопоточная программа может увеличить
пропускную способность путём более эффективного использования доступных
ресурсов процессора.
Использование многопоточности может также помочь достигнуть большей
пропускной способности на однопроцессорной машине. Если программа
однопоточная, процессор просто ожидает (idle) завершения синхронных операций
ввода/вывода. Если программа многопоточная, другой поток может все ещё
выполняться, пока первый поток ожидает завершения операций ввода/вывода,
позволяя приложению продолжать работу во время блокировки ввода/вывода. (Это
похоже на чтение новостей, во время ожидания закипания воды в чайнике, вместо
того, чтобы ждать пока вода закипит, прежде чем начать читать.)