С живучестью потока связана производительность. В то время как живучесть
означает, что что-то хорошее непременно произойдёт, это в конечном итоге может
быть недостаточно хорошо - мы часто хотим, чтобы хорошие вещи происходили
быстро. Вопросы производительности относятся к широчайшему спектру проблем,
включая плохое время обслуживания, отзывчивость, пропускную способность,
потребление ресурсов или масштабируемость. Как и в случае безопасности и
живучести, многопоточные программы подвержены всем проблемам
производительности однопоточных программ, а также прочим, добавляющимся
при использовании потоков.
В хорошо спроектированных параллельных приложениях использование
потоков приводит к чистому приросту производительности, тем не менее, потоки
приводят к большим накладным расходам во время выполнения. Переключение
контекста (Context switches) – это ситуация, когда планировщик временно
приостанавливает активный поток, так что другой поток может запуститься – что
наиболее часто происходит в приложениях с множеством потоков и стоит довольно
дорого: сохранение и восстановление контекста выполнения, потеря локальности и
время ЦП затраченное на планирование потоков, вместо их запуска. Когда потоки
совместно используют данные, они должны использовать механизмы
синхронизации, которые могут препятствовать компилятору в проведении
оптимизаций, путём сброса кэшей памяти или пометки их устаревшими, и, таким
образом, создавая траффик синхронизации в шине разделяемой памяти. Все эти
факторы вводят дополнительные расходы производительности; В Главе 11
описывается техника анализа и снижения стоимости.